友元：
1 友元函数
	一个类的友元函数可以访问该类的私有成员：
	class CCar;
	class CDriver{
		public:
		void Modify(CCar * pCar);	
	};
	class CCar{
		private:
			int price;
		friend int CDriver::modify(CCar *pCar);	//声明CCar的友元函数是CDriver类的成员函数
		friend void MostExpensiveCar(CCar cars[], int total);//声明友元函数是一个外在函数
	};

	void CDriver::modify(CCar *pCar)
	{
		pCar->price += 1000;//可以访问CCar类的私有成员price，因为是CCar的友元函数
	}
	int MostExpensiveCar(CCar cars[], int total)
	{
		int i = 0, max = 1;
		for(;i<total;i++){
			if(max < cars[i].price)
				max = cars[i].price;//可以访问CCar类的私有成员，因为是CCar类的友元函数
		}	
		return max;
	}

	一个类的成员函数可以是另外一个类的友元函数，这里的成员函数包括析构函数和构造函数

2 友元类
	若A是B的友元类，则A可以访问B的私有成员
	class CCar{
		private:
			int price;
		friend class CDriver;//声明CDriver是CCar的友元类	
	};
	class CDriver{
		public:
			CCar mycar;
			void modify(){
				mycar.price += 1000;//CDriver的成员函数可以访问CCar的私有成员变量	
			}
	};

注意：友元之间的关系不能传递、也不能继承！
