多态的实现原理

“多态”的关键在于通过基类指针或引用调用一个虚函数时，编译时不确定到底调用的是基类还是派生类的函数，运行时才确定---这叫“动态联编”

实现多态的关键--虚函数表
1 每一个有虚函数的类（或有虚函数的类的派生类）都有一个 虚函数表！
2 每一个对象中都存放着一个虚函数表的指针！所以，sizeof(含虚函数的类)都比原本的大小大4个字节
3 多出来的四个字节用来存放虚函数表的地址
4 虚函数表的地址存放在类的对象的最前端（地址低的位置）
5 多态的实现：多态的调用语句被编译成一系列根据基类指针所指向（或基类引用所引用）对象中存放的虚函数表的地址，在虚函数表中查找虚函数地址，并调用虚函数的指令！

多态的代价：
1 空间开销：每个对象都有额外的四个字节的开销
2 时间开销：每次的多态都需要对虚函数表进行查找

